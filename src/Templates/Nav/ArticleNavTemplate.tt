<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Net" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SharpDox.Plugins.Chm.Steps" #>
<#@ import namespace="SharpDox.Model.Documentation.Article" #>

<# if(Articles.Count > 0) {
	foreach (var article in Articles)
	{
		if (article is SDDocPlaceholder)
		{ #>
			<li> <object type="text/sitemap">
					<param name="Name" value="<#= WebUtility.HtmlEncode(article.Title) #>">
					<param name="Local" value="<#= Helper.RemoveIllegalCharacters(article.Title.Replace(" ", "_")) #>.html">
				</object>
				<ul>
				<# var apiNavTemplate = new ApiNavTemplate { SDRepository = StepInput.SDProject.Repositories[((SDDocPlaceholder)article).SolutionFile] }; #>
				<#= apiNavTemplate.TransformText() #>
				</ul>
			</li>
		<# }
		else if (article != null)
		{ #>
			<li> <object type="text/sitemap">
					<param name="Name" value="<#= WebUtility.HtmlEncode(article.Title) #>">
					<param name="Local" value="<#= Helper.RemoveIllegalCharacters(article.Title.Replace(" ", "_")) #>.html">
				</object>
			</li>
		<# }
		else
		{ #>
			<li> <object type="text/sitemap">
					<param name="Name" value="<#= WebUtility.HtmlEncode(article.Title) #>">
					<param name="Local" value="<#= Helper.RemoveIllegalCharacters(article.Title.Replace(" ", "_")) #>.html">
				</object>
				<ul>
				<# var articleNavTemplate = new ArticleNavTemplate { Articles = article.Children }; #>
				<#= articleNavTemplate.TransformText() #>
				</ul>
			</li>
		<# }
	}
} #>

<#+ public List<SDArticle> Articles { get; set; } #>